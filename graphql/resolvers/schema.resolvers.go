package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"context"
	"fmt"

	"github.com/pixperk/notifly/graphql/generated"
	"github.com/pixperk/notifly/graphql/models"
)

// SignUp is the resolver for the signUp field.
func (r *mutationResolver) SignUp(ctx context.Context, input models.SignUpInput) (*models.AuthResp, error) {
	panic(fmt.Errorf("not implemented: SignUp - signUp"))
}

// SignIn is the resolver for the signIn field.
func (r *mutationResolver) SignIn(ctx context.Context, input models.SignInInput) (*models.AuthResp, error) {
	panic(fmt.Errorf("not implemented: SignIn - signIn"))
}

// ValidateToken is the resolver for the validateToken field.
func (r *mutationResolver) ValidateToken(ctx context.Context, input models.ValidateTokenInput) (*models.ValidateTokenResp, error) {
	panic(fmt.Errorf("not implemented: ValidateToken - validateToken"))
}

// TriggerNotification is the resolver for the triggerNotification field.
func (r *mutationResolver) TriggerNotification(ctx context.Context, input models.NotificationInput) (*models.TriggerNotificationResp, error) {
	panic(fmt.Errorf("not implemented: TriggerNotification - triggerNotification"))
}

// HealthCheck is the resolver for the healthCheck field.
func (r *queryResolver) HealthCheck(ctx context.Context) (string, error) {
	panic(fmt.Errorf("not implemented: HealthCheck - healthCheck"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
